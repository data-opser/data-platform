#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# -----------------------------------------------------------------------
# We don't support docker compose for production environments.
# If you choose to use this type of deployment make sure to
# create you own docker environment file (docker/.env) with your own
# unique random secure passwords and SECRET_KEY.
# -----------------------------------------------------------------------
x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest-dev}

services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  superset:
    env_file:
      - path: .env # default
        required: false
    image: *superset-image
    container_name: superset_app
    user: "root"
    restart: unless-stopped
    volumes:
      - ./superset_config.py:/app/superset_config.py
    ports:
      - 8088:8088
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  # superset-init:
  #   image: *superset-image
  #   container_name: superset_init
  #   command: ["/app/docker-init.sh"]
  #   env_file:
  #     - path: .env # default
  #       required: false
  #   depends_on:
  #     redis:
  #       condition: service_started
  #   user: "root"
  #   volumes:
  #     - ./docker-init.sh:/app/docker-init.sh
  #     - ./superset_config.py:/app/superset_config.py
  #   healthcheck:
  #     disable: true
  #   environment:
  #     SUPERSET_LOAD_EXAMPLES: "${SUPERSET_LOAD_EXAMPLES:-yes}"
  #     SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  # superset-worker:
  #   image: *superset-image
  #   container_name: superset_worker
  #   command: ["superset celery --app=superset.tasks.celery_app:app worker"]
  #   env_file:
  #     - path: .env # default
  #       required: false
  #   restart: unless-stopped
  #   depends_on:
  #     superset-init:
  #       condition: service_completed_successfully
  #   user: "root"
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
  #       ]
  #   environment:
  #     SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  # superset-worker-beat:
  #   image: *superset-image
  #   container_name: superset_worker_beat
  #   command: ["superset celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid --schedule /tmp/celerybeat-schedule"]
  #   env_file:
  #     - path: .env # default
  #       required: false
  #   restart: unless-stopped
  #   depends_on:
  #     superset-init:
  #       condition: service_completed_successfully
  #   user: "root"
  #   healthcheck:
  #     disable: true
  #   environment:
  #     SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false