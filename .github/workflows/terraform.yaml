name: 'Terragrunt GitHub Actions'
on:
  push:
    paths:
      - 'operation/terraform/**'
    branches:
      - main
  pull_request:
    paths:
      - 'operation/terraform/**'
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR
env:
  tf_version: '1.8.5'
  tg_version: '0.59.4'
  working_dir: 'operation/terraform'

jobs:
  terragrunt:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      run: |
        wget https://releases.hashicorp.com/terraform/1.12.1/terraform_1.12.1_linux_amd64.zip
        unzip terraform_1.12.1_linux_amd64.zip
        sudo mv terraform /usr/local/bin/

    - name: Install OpenVPN
      run: |
        sudo apt update
        sudo apt install -y openvpn openvpn-systemd-resolved
        echo "${{ secrets.VPN_CONFIG }}" > ./config.ovpn

    - name: Connect to VPN
      uses: "kota65535/github-openvpn-connect-action@v2"
      with:
        config_file: ./config.ovpn

    - name: Install python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io -y
        sudo usermod -aG docker $USER

    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Initialize Terragrunt
      run:  eval `ssh-agent -s` && ssh-add - <<< '${{ secrets.RSA_PRIVATE_KEY }}' && cd ${{env.working_dir}} && terragrunt run-all init --terragrunt-non-interactive

    - name: Validate Terragrunt configuration
      run: cd ${{env.working_dir}} && terragrunt run-all validate
      continue-on-error: true

    - name: Plan Terragrunt deployment
      run: cd ${{env.working_dir}} && terragrunt run-all plan --terragrunt-non-interactive

    - name: Apply Terragrunt deployment
      if: github.ref == 'refs/heads/prod' || github.ref == 'refs/heads/stage'  && github.event_name == 'push'
      run: cd ${{env.working_dir}} && terragrunt run-all apply --terragrunt-non-interactive